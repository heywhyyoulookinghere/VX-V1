do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (1==v18) then function v21(v31,v32,v33)if v33 then local v66=(2799 -1535) -(1152 + (1870 -(1178 + 580)));local v67;while true do if (v66==0) then v67=(v31/(2^(v32-(2 -1))))%((1 + 1)^(((v33-(2 -(1955 -(327 + 1627)))) -(v32-1)) + 1));return v67-(v67%(3 -2));end end else local v68=0 + 0;local v69;while true do if (v68==((1689 -(16 + 57)) -(72 + 1544))) then v69=(808 -(653 + 153))^(v32-((221 + 301) -(411 + 110)));return (((v31%(v69 + v69))>=v69) and (1 + 0)) or 0;end end end end v22=nil;function v22()local v39=60 -(38 + 22);local v40;while true do if (v39==1) then return v40;end if (v39==(0 + 0 + 0)) then v40=v2(v16,v19,v19);v19=v19 + (1991 -(1184 + 806));v39=3 -(1678 -(328 + 1348));end end end v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v34)if (v2(v34,2)==79) then v20=v1(v4(v34,1,1));return "";else local v70=0;local v71;while true do if (v70==0) then v71=v3(v1(v34,16));if v20 then local v80=0;local v81;while true do if (v80==1) then return v81;end if (v80==0) then v81=v6(v71,v20);v20=nil;v80=1;end end else return v71;end break;end end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v41=v24();local v42=v24();return (( -(4 -(1017 -(438 + 577))) * v21(v42,1831 -(129 + 1670))) + (1871 -(1100 + 770))) * (2^(v21(v42,(1213 -(18 + 34)) -(661 + 479),31) -(280 + 743))) * ((((v21(v42,1 -0,46 -(74 -48)) * (2^(16 + (55 -39)))) + v41)/((3 -1)^(32 + 20))) + (1296 -(714 + 581)));end v26=nil;function v26(v35)local v43;if  not v35 then local v72=798 -(272 + 526);while true do if (v72==(0 -0)) then v35=v24();if (v35==((5514 -4270) -(1155 + 89))) then return "";end break;end end end v43=v4(v16,v19,(v19 + v35) -(1 + 0));v19=v19 + v35;local v44={};for v64=280 -(167 + 112), #v43 do v44[v64]=v3(v2(v4(v43,v64,v64)));end return v7(v44);end v27=v24;v18=4;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v45=0;local v46;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v45==2) then v50=nil;v51=nil;v45=3;end if (1==v45) then v48=nil;v49=nil;v45=507 -(330 + 175);end if (v45==(11 -8)) then v52=nil;while true do local v74=0;while true do if (v74==(0 + 0)) then if (v46==(1 -0)) then local v97=0;while true do if ((1 + 0)==v97) then v52={};v46=2;break;end if (v97==0) then v50={v47,v48,nil,v49};v51=v24();v97=1;end end end if (v46~=2) then else local v98=0;while true do if (v98==(0 + 0)) then for v106=1,v51 do local v107=0;local v108;local v109;local v110;local v111;local v112;while true do if (v107==0) then v108=0 + 0;v109=nil;v107=1;end if (v107~=2) then else v112=nil;while true do if (v108~=(4 -2)) then else while true do if ((1752 -(556 + 1196))~=v109) then else local v157=0;while true do if (v157==1) then v109=1552 -(1281 + 270);break;end if (v157~=(0 + 0)) then else v110=0 -0;v111=nil;v157=1 + 0;end end end if (v109==(4 -3)) then v112=nil;while true do if (v110==(0 + 0)) then local v230=0;while true do if (v230~=1) then else v110=517 -(14 + 502);break;end if (v230==0) then local v246=0;local v247;while true do if (v246~=(1701 -(881 + 820))) then else v247=0;while true do if (v247==0) then v111=v22();v112=nil;v247=1;end if (v247==(1428 -(471 + 956))) then v230=3 -2;break;end end break;end end end end end if (v110~=(1267 -(869 + 397))) then else if (v111==(1 -0)) then v112=v22()~=(979 -(645 + 334));elseif (v111==2) then v112=v25();elseif (v111==3) then v112=v26();end v52[v106]=v112;break;end end break;end end break;end if (v108~=(1 + 0)) then else local v121=0;while true do if (v121==(0 + 0)) then v111=nil;v112=nil;v121=1;end if (1~=v121) then else v108=1 + 1;break;end end end if (v108==0) then v109=0;v110=nil;v108=1;end end break;end if (v107==1) then v110=nil;v111=nil;v107=2;end end end v50[3]=v22();v98=2 -1;end if ((1 -0)==v98) then for v113=1 -0,v24() do local v114=0 -0;local v115;local v116;local v117;local v118;while true do if (v114~=(3 -1)) then else while true do if (v115~=(1760 -(1220 + 539))) then else v118=nil;while true do if (v116~=1) then else while true do if (v117==(0 + 0)) then v118=v22();if (v21(v118,3 -2,1)==(0 + 0)) then local v240=936 -(601 + 335);local v241;local v242;local v243;local v244;local v245;while true do if ((1 + 0)~=v240) then else v243=nil;v244=nil;v240=1860 -(385 + 1473);end if (v240==(5 -3)) then v245=nil;while true do if (v241~=2) then else while true do if (v242==(2000 -(401 + 1596))) then if (v21(v244,3,9 -6)~=(1 + 0)) then else v245[4]=v52[v245[4]];end v47[v113]=v245;break;end if ((9 -7)==v242) then local v314=0;local v315;while true do if (v314==0) then v315=0;while true do if (v315~=(0 -0)) then else local v348=0;while true do if (1==v348) then v315=1;break;end if ((0 + 0)==v348) then if (v21(v244,1,1)~=1) then else v245[2]=v52[v245[2]];end if (v21(v244,2,1159 -(830 + 327))==(3 -2)) then v245[3]=v52[v245[3]];end v348=1;end end end if (v315~=1) then else v242=3;break;end end break;end end end if (v242==(2 -1)) then local v316=0 + 0;local v317;while true do if (v316==0) then v317=0 + 0;while true do if (0==v317) then v245={v23(),v23(),nil,nil};if (v243==(0 + 0)) then local v351=0;local v352;local v353;while true do if ((996 -(732 + 263))~=v351) then else while true do if ((0 -0)~=v352) then else v353=794 -(85 + 709);while true do if (v353==0) then v245[1335 -(1085 + 247)]=v23();v245[4 + 0]=v23();break;end end break;end end break;end if (v351==0) then v352=0 + 0;v353=nil;v351=1;end end elseif (v243==(961 -(485 + 475))) then v245[1721 -(1340 + 378)]=v24();elseif (v243==(1 + 1)) then v245[3]=v24() -(2^16);elseif (v243==3) then local v364=0 -0;local v365;local v366;while true do if (v364==0) then v365=0 -0;v366=nil;v364=1 -0;end if (v364~=(3 -2)) then else while true do if (v365~=0) then else v366=0 + 0;while true do if ((0 -0)==v366) then v245[4 -1]=v24() -((1132 -(836 + 294))^(45 -29));v245[4]=v23();break;end end break;end end break;end end end v317=1 + 0;end if (v317~=(1 + 0)) then else v242=2 + 0;break;end end break;end end end if (v242~=0) then else local v318=0;local v319;local v320;while true do if (v318~=0) then else v319=532 -(89 + 443);v320=nil;v318=1 + 0;end if (v318==1) then while true do if (0==v319) then v320=0;while true do if (1~=v320) then else v242=1;break;end if (v320==(0 + 0)) then local v355=0;while true do if (v355~=(1 -0)) then else v320=1 + 0;break;end if (v355==0) then local v363=640 -(243 + 397);while true do if (v363==0) then v243=v21(v118,2,3 + 0);v244=v21(v118,17 -13,23 -17);v363=1 -0;end if ((1825 -(1814 + 10))~=v363) then else v355=2 -1;break;end end end end end end break;end end break;end end end end break;end if ((1752 -(1286 + 465))==v241) then local v295=0;local v296;while true do if (v295==(1074 -(388 + 686))) then v296=0;while true do if (v296~=(0 + 0)) then else local v331=0 + 0;while true do if ((0 -0)==v331) then v244=nil;v245=nil;v331=3 -2;end if (v331==(1738 -(1513 + 224))) then v296=1;break;end end end if (v296==1) then v241=2;break;end end break;end end end if (v241==(0 -0)) then local v297=0 + 0;local v298;while true do if (v297==(897 -(490 + 407))) then v298=0 + 0;while true do if (v298==1) then v241=1 + 0;break;end if (v298==(0 -0)) then v242=273 -(238 + 35);v243=nil;v298=1;end end break;end end end end break;end if (v240~=0) then else v241=0;v242=nil;v240=1 + 0;end end end break;end end break;end if (v116==(0 + 0)) then local v158=0 + 0;local v159;while true do if (v158==(389 -(7 + 382))) then v159=46 -(41 + 5);while true do if (v159~=(523 -(54 + 469))) then else v117=0;v118=nil;v159=1;end if (v159==(1128 -(87 + 1040))) then v116=1 -0;break;end end break;end end end end break;end if (0==v115) then v116=0 + 0;v117=nil;v115=1;end end break;end if (v114~=(1415 -(219 + 1195))) then else v117=nil;v118=nil;v114=2 -0;end if (0==v114) then v115=0;v116=nil;v114=1;end end end v46=3;break;end end end v74=1738 -(1484 + 253);end if (v74==(3 -2)) then if (v46==(13 -10)) then local v99=0;local v100;while true do if (0~=v99) then else v100=0 + 0;while true do local v119=0 -0;while true do if ((996 -(518 + 478))~=v119) then else if (v100~=(175 -(11 + 164))) then else for v122=1,v24() do v48[v122-(1 + 0)]=v29();end for v124=1,v24() do v49[v124]=v24();end v100=1 -0;end if ((1 + 0)~=v100) then else return v50;end break;end end end break;end end end if (v46==(0 + 0)) then local v101=0 -0;local v102;while true do if (v101==0) then v102=0;while true do if (v102==0) then local v120=0 -0;while true do if (v120~=1) then else v102=1;break;end if (v120~=0) then else v47={};v48={};v120=1;end end end if ((1 + 0)==v102) then v49={};v46=1;break;end end break;end end end break;end end end break;end if (v45~=0) then else local v73=0 -0;while true do if (v73~=0) then else v46=0;v47=nil;v73=447 -(199 + 247);end if (v73==1) then v45=1;break;end end end end end v18=5;end if (2==v18) then function v23()local v53=0 + 0;local v54;local v55;while true do if ((87 -(62 + 24))==v53) then return (v55 * (1160 -904)) + v54;end if (v53==(0 + 0)) then v54,v55=v2(v16,v19,v19 + ((1612 -(784 + 824)) -2));v19=v19 + 2;v53=1 -0;end end end v24=nil;function v24()local v56,v57,v58,v59=v2(v16,v19,v19 + (1487 -(755 + 100 + 629)));v19=v19 + 3 + (311 -(86 + 224));return (v59 * (15454468 + 1322748)) + (v58 * (178971 -113435)) + (v57 * 256) + v56;end v25=nil;v18=3;end if (5==v18) then v30=nil;function v30(v36,v37,v38)local v60=0;local v61;local v62;local v63;while true do if (v60==0) then v61=v36[1];v62=v36[2];v60=1;end if (v60==1) then v63=v36[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v12("#",...) -1;local function v79()local v82=v61;local v83=Const;local v84=v62;local v85=v63;local v86=v28;local v87={};local v88={};local v89={};for v95=0,v78 do if (((15732 -11230)==(5138 -(252 + 384))) and (v95>=v85)) then v87[v95-v85]=v77[v95 + (1 -0)];else v89[v95]=v77[v95 + 1];end end local v90=(v78-v85) + (1957 -(15 + 1941));local v91;local v92;while true do local v96=0 -0;while true do if (((1236 + 294)<=1538) and ((1323 -(452 + 870))==v96)) then if ((v92<=(52 -(3 + 27))) or ((517 + 3157)<=2649)) then if ((v92<=(39 -29)) or ((4461 -((812 -501) + 327))==640)) then if ((v92<=(614 -(466 + (1988 -(690 + 1154))))) or ((594 + 1378)>(251 + (3048 -(305 + 178))))) then if ((v92<=(1 + 0)) or ((1320 + 2930)==(2882 + 1316))) then if ((v92==(0 + 0)) or (3419<(2430 -(1771 + 81)))) then v89[v91[2 -0]]=v91[302 -(213 + 86)];else local v127=0;local v128;local v129;while true do if ((((4813 -(335 + 400)) -2839)==(2537 -(1108 + 190))) and (v127==(1 + 0))) then v89[v128 + 1 + 0 + 0]=v129;v89[v128]=v129[v91[3 + 1]];break;end if ((v127==(0 -(0 -0))) or ((2058 + 2824)<=(509 + 1274))) then v128=v91[(6 + 0) -(13 -9)];v129=v89[v91[1 + 2]];v127=1490 -(861 + 628);end end end elseif (((3673 -1347)>(147 + 574)) and (v92<=(1709 -(612 + 131 + 964)))) then local v130=0 -0;local v131;local v132;local v133;local v134;while true do if ((3914>=(413 + 70)) and (v130==(0 + 0))) then local v227=0 -0;while true do if ((v227==(1992 -(1460 + 532))) or ((1148 + 2706)<=2006)) then v131=v91[2 -0];v132,v133=v86(v89[v131](v13(v89,v131 + (728 -(361 + 366)),v91[9 -6])));v227=1423 -(314 + 1108);end if ((v227==(1 + 0)) or ((15051 -(11823 -(578 + 272)))<(11215 -(3434 + 4594)))) then v130=1;break;end end end if ((v130==(2 -1)) or (4426<(12454 -9684))) then v76=(v133 + v131) -(1400 -(1034 + 365));v134=0 + 0;v130=680 -(28 + 650);end if (((6142 -(657 + 1010))>=843) and (((3 + 0) -(1 + 0))==v130)) then for v232=v131,v76 do local v233=0 -0;while true do if ((v233==(0 + 0)) or (4557<(6670 -2274))) then v134=v134 + 1 + 0;v89[v232]=v132[v134];break;end end end break;end end elseif (((3598 -(598 + 1213))>(1976 -757)) and (v92>(5 -2))) then local v160=0 -0;local v161;while true do if ((v160==((0 -0) -0)) or ((1767 + 1061)==(8717 -6538))) then v161=v91[1137 -(171 + 964)];v89[v161]=v89[v161]();break;end end else v89[v91[2]]=v89[v91[3]][v89[v91[1675 -(940 + 655 + 76)]]];end elseif (((1848 -(1077 + 328 + 412))<=387) and (v92<=7)) then if (((1453 -(924 + (1052 -(824 + 13))))<=(290 + 2576)) and (v92<=(22 -17))) then local v135=0 + 0;local v136;local v137;local v138;while true do if ((v135==(2 -1)) or ((11216 -7077)<362)) then v138=nil;while true do if ((((1925 -1132) + 3879)>(13733 -10527)) and (v136==((0 -0) -0))) then v137=869 -(78 + 791);v138=nil;v136=1;end if ((v136==1) or ((131 + 2452)<(6561 -4014))) then while true do if (((152 -112)==(1289 -(822 + 427))) and (v137==0)) then v138=v91[2 -(0 + 0)];v89[v138]=v89[v138](v89[v138 + ((3 + 0) -2)]);break;end end break;end end break;end if ((v135==(0 -(1802 -(1123 + 679)))) or (3943==(37 + 51))) then v136=1918 -(99 + (2914 -(438 + 657)));v137=nil;v135=1 + 0;end end elseif ((v92==(6 + 0)) or (1767>=(395 + 2268))) then local v163=0 + 0;local v164;local v165;local v166;local v167;local v168;while true do if ((2==v163) or ((2296 -(496 + 1114))==(14675 -11506))) then v168=nil;while true do if (((6749 -(2420 + 676))>=((1894 + 1225) -(207 + 602 + 61))) and (((1033 -(600 + 433)) + 0)==v164)) then local v249=0 + 0;while true do if (((5460 -(1266 + 84))>(502 + 754)) and ((0 + 0)==v249)) then v165=0;v166=nil;v249=1065 -(382 + 682);end if ((v249==(1 + 0)) or ((370 + 3575)==(2451 -(921 + 63)))) then v164=1982 -(53 + 1928);break;end end end if ((v164==(1 + 0)) or ((4853 -2345)<((7228 -5346) -(77 + 1)))) then local v250=0 -0;while true do if ((v250==0) or (((8204 -(104 + 95)) -4293)==(4556 -2791))) then v167=nil;v168=nil;v250=1;end if ((((366 + 218) -315)==(909 -640)) and (v250==(1 -0))) then v164=282 -(115 + 80 + 85);break;end end end if (((2 + 0)==v164) or ((19355 -14938)<=(5480 -3918))) then while true do if ((3925>=313) and (v165==(0 + 0))) then local v288=0;local v289;while true do if (((935 -(78 + 857))==v288) or ((4490 + 349)<=(7775 -4684))) then v289=(275 -(49 + 226)) -0;while true do if ((v289==(1 -0)) or ((5124 -((1420 -753) + 2))<=(6978 -4314))) then v165=1;break;end if (((2768 -(697 + 514))<=(9103 -6759)) and ((167 -(81 + 86))==v289)) then local v329=0;while true do if (((751 -(58 + 87))<(4114 -(82 + 315))) and (v329==(513 -((1249 -(39 + 723)) + (371 -(284 + 62)))))) then v289=1836 -(1450 + 385);break;end if (((323 + 1184)<=2710) and (v329==(0 -(0 + 0)))) then v166=v91[1 + 1];v167={v89[v166](v89[v166 + (1740 -(183 + 1556))])};v329=1;end end end end break;end end end if (((2039 -(1194 + 486))<=(4526 -3016)) and (v165==1)) then v168=329 -(202 + 127);for v299=v166,v91[9 -5] do local v300=0 -0;while true do if ((4993>((7947 -(331 + 136)) -3552)) and (v300==0)) then v168=v168 + 1;v89[v299]=v167[v168];break;end end end break;end end break;end end break;end if ((v163==(0 -0)) or ((12081 -7167)<(751 + 2875))) then v164=1433 -(1108 + 325);v165=nil;v163=2 -1;end if (((2 -1)==v163) or ((3965 -(640 + 300))<(5585 -3143))) then v166=nil;v167=nil;v163=5 -3;end end else v89[v91[1 + 1 + 0]]=v91[3 + 0]~=0;end elseif ((v92<=(14 -6)) or ((9537 -6525)>=((5347 -(371 + 82)) -(181 + 88)))) then v37[v91[4 -1]]=v89[v91[2 + 0]];elseif (((62 + 9)==((2495 -(425 + 855)) -(702 + 442))) and (v92>(1446 -(552 + 885)))) then v89[v91[2]]=v38[v91[2 + 1]];else v89[v91[1 + 1]][v91[6 -3]]=v89[v91[3 + 1 + 0]];end elseif (((33 + 1328)<=3036) and (v92<=(28 -(1919 -(775 + 1132))))) then if ((v92<=(33 -20)) or (2185<(115 -(13 + 42)))) then if ((v92<=((19 + 8) -16)) or ((5628 -(1020 + 440))<=(667 + 316))) then local v140=0 -(0 + 0);local v141;local v142;while true do if ((v140==((0 -0) -0)) or ((4400 -2736)==(32 + 355))) then v141=v91[1262 -(597 + 663)];v142={};v140=1 + 0;end if (((3175 + 459)==(4550 -(784 + 132))) and (v140==(1253 -(939 + 313)))) then for v234=1 + 0, #v88 do local v235=0;local v236;while true do if ((v235==(842 -(745 + 97))) or (2393>(2952 + 836))) then v236=v88[v234];for v251=0 + 0, #v236 do local v252=0;local v253;local v254;local v255;local v256;while true do if ((v252==(0 -0)) or ((867 -(40 + 300))>3759)) then v253=0;v254=nil;v252=1 + 0;end if (((1842 -(355 + 888))<=837) and ((2 -1)==v252)) then v255=nil;v256=nil;v252=505 -(102 + 401);end if (((2258 -1509)<=(2883 -(60 + 825))) and (v252==(1765 -(1014 + 749)))) then while true do if ((v253==(0 -0)) or (4194<(4147 -(461 + 657)))) then local v310=1470 -(573 + 897);while true do if (((0 -0)==v310) or ((2348 -(40 + 239))<458)) then v254=v236[v251];v255=v254[1];v310=1 + 0 + 0;end if (((1515 -(9 + 20))<=(3356 -1795)) and (v310==(342 -(130 + (968 -(104 + 653)))))) then v253=1 + 0;break;end end end if (((2990 + 438)>(2820 -(1415 + 188))) and (v253==(1 + 0))) then v256=v254[2 -(0 + 0)];if (((v255==v89) and (v256>=v141)) or ((4451 -(206 + 1314))<2023)) then local v324=0 -0;local v325;local v326;while true do if (((979 + 3584)==((6722 -(1055 + 549)) -(134 + 421))) and ((1 + 0)==v324)) then while true do if (((413 -191)<(5161 -(203 + 1199))) and (v325==(0 -0))) then v326=0 -0;while true do if ((v326==(0 + (0 -0))) or ((2160 -998)>=(453 + 2504))) then v142[v256]=v255[v256];v254[1 -0]=v142;break;end end break;end end break;end if (((1013 + 113)>(1888 -(1588 + 283))) and (((0 + 0) -0)==v324)) then v325=0 + 0;v326=nil;v324=1 + 0;end end end break;end end break;end end end break;end end end break;end end elseif ((((1856 -942) -(66 + 526))==(931 -609)) and (v92>(18 -6))) then local v172=977 -(419 + 558);local v173;local v174;local v175;local v176;local v177;local v178;while true do if (((1989 -(425 + 36))==(771 + 757)) and (v172==3)) then while true do if ((v173==(67 -(33 + 31))) or ((239 + 691)==(682 -(28 + 16)))) then if (((403 + (3166 -(552 + 238)))<=(18308 -14395)) and v178) then local v279=0 -0;local v280;local v281;while true do if ((v279==(1 + (0 -0))) or ((3875 -(438 + 67))<(1775 -995))) then while true do if ((4391>=(1645 + 1210)) and ((286 -(75 + 211))==v280)) then v281=(1074 -(255 + 819)) + 0;while true do if (((5050 -(117 + 375))>=840) and (v281==((3315 -1827) -(992 + 496)))) then v89[v176]=v178;v75=v91[3];break;end end break;end end break;end if (((2219 -(191 + 289))>=369) and (v279==(0 -0))) then v280=0;v281=nil;v279=1 + 0;end end else v75=v75 + 1 + 0;end break;end if ((v173==((489 -(472 + 17)) + 0)) or ((1604 -(486 + 957))==(12604 -10022))) then local v257=0 -0;while true do if ((v257==(4 -3)) or (1680<=((829 -(351 + 26)) + 1002))) then v173=1 -0;break;end if ((2162>=(850 + 303)) and (v257==(609 -(29 + 580)))) then v174=v91[760 -(295 + 463)];v175=v91[4];v257=1 + 0;end end end if ((v173==(647 -(212 + 433))) or ((1859 -(166 + 682))>(2411 + 2313))) then local v258=0 + 0 + 0;while true do if (((723 + 3363)>=(1290 -(422 + 742))) and (v258==1)) then v173=3;break;end if (((10387 -5493)>=2610) and (v258==0)) then for v301=1,v175 do v89[v176 + v301]=v177[v301];end v178=v177[(99 -(81 + 17)) + 0];v258=1 + 0;end end end if ((v173==(1 -0)) or ((1430 + 1450)<=((2795 -(432 + 353)) -728))) then v176=v174 + (2 -0);v177={v89[v174](v89[v174 + 1 + 0],v89[v176])};v173=2;end end break;end if (((5221 -(295 + (1700 -(134 + 934))))<(797 + 4163)) and (v172==(855 -(192 + 663)))) then v173=1571 -(1503 + 68);v174=nil;v172=1 -0;end if ((v172==(486 -(122 + 362))) or ((523 -163)>(3521 -(225 + 22)))) then v177=nil;v178=nil;v172=3;end if ((3697>(2718 -1789)) and (v172==1)) then v175=nil;v176=nil;v172=2 -0;end end elseif ((v91[830 -(68 + (2444 -1684))]==v89[v91[1102 -((474 -200) + 824)]]) or ((208 + 847)>=(142 + 4214))) then v75=v75 + ((1 + 0) -0);else v75=v91[6 -3];end elseif (((1988 -1375)==((2411 -(381 + 1283)) -134)) and (v92<=14)) then v89[v91[8 -6]]= #v89[v91[3]];elseif (((34 + 664)<=(4104 -(472 + 1004))) and (v92==15)) then if (v89[v91[2 + 0]] or ((6286 -2964)==(6585 -4536))) then v75=v75 + 1 + 0;else v75=v91[8 -5];end else local v179=0 -0;local v180;local v181;local v182;local v183;local v184;while true do if ((v179==(0 -0)) or (((1144 + 2773) -((103 -67) + 127))<(587 + 1140))) then v180=0;v181=nil;v179=1;end if ((v179==1) or ((2315 -(98 + 25 + 50))>=((3784 -2040) + 1159))) then v182=nil;v183=nil;v179=2 + 0;end if (((86 -23)==63) and (v179==(8 -(1640 -(23 + 1611))))) then v184=nil;while true do if (((8 -6)==v180) or ((6005 -(1429 + 72))>(6794 -(1835 + 105)))) then while true do if (((3001 + (1809 -(1505 + 142)))>(2882 -(1835 -(128 + 10)))) and (v181==((608 + 1127) -(557 + 1177)))) then v184=v91[196 -((2022 -(1584 + 376)) + 131)];for v303=3 -2,v184 do v183[v303]=v89[v182 + v303];end break;end if ((v181==(0 -0)) or (4611==2536)) then local v290=0;while true do if (((5426 -((1059 -(99 + 86)) + 551))==(6304 -2303)) and (v290==((550 -(215 + 335)) + 0))) then local v311=0 -0;while true do if ((v311==0) or ((365 + (2681 -2002))>3943)) then v182=v91[2 + 0];v183=v89[v182];v311=(2579 -(629 + 665)) -(1257 + 26 + 1);end if (((2906 -(333 + 375))==(2365 -(86 + 15 + 66))) and (v311==(1 -0))) then v290=1;break;end end end if (((2091 -(307 + 130))==(241 + 1413)) and (v290==(3 -2))) then v181=2 -1;break;end end end end break;end if ((v180==0) or ((5376 -3189)==(2305 + 2336))) then local v259=0 + 0;while true do if ((847<(1722 + 295)) and (v259==(0 + 0))) then v181=(0 -0) -0;v182=nil;v259=1 + 0;end if (((11816 -(7411 + 1599))>=((5455 -(425 + 1383)) -(565 + 900))) and (v259==(473 -(260 + 212)))) then v180=1 + (1717 -(1684 + 33));break;end end end if ((v180==(1 + 0)) or ((6125 -(1178 + (1198 -(739 + 39))))<=(2864 -(44 + 1532)))) then local v260=0 -(0 + 0);while true do if (((43 + 652)<(4745 -(395 + 504))) and (v260==(0 + 0))) then v183=nil;v184=nil;v260=2 -1;end if ((v260==1) or ((1493 + 334)==(548 + 1506))) then v180=1167 -(528 + 637);break;end end end end break;end end end elseif ((v92<=(777 -(288 + 470))) or ((2628 -1300)==(4579 -(1247 + 44 + 105)))) then if ((v92<=(8 + 9)) or ((1494 + 3375)<(3423 + 132))) then v75=v91[1449 -(172 + 1274)];elseif (((4786 -(998 + 348))>=(3122 -(329 + 1304))) and (v92>(556 -(485 + 53)))) then local v185=0 -0;local v186;local v187;while true do if ((v185==(3 -2)) or ((2652 -((2849 -1987) + 217))>2095)) then while true do if (((3399 + 893)==(9208 -4916)) and (v186==0)) then v187=v91[1252 -(379 + 871)];v89[v187](v89[v187 + 1 + 0]);break;end end break;end if ((2750==2750) and (v185==(0 -(1081 -(396 + 685))))) then v186=0;v187=nil;v185=1;end end else local v188=0 -0;local v189;while true do if (((5587 -(291 + 837 + 213))>=1736) and (v188==((1984 -(641 + 1343)) -0))) then v189=v91[6 -4];v89[v189](v13(v89,v189 + (559 -(100 + 458)),v91[10 -7]));break;end end end elseif ((v92<=(49 -29)) or ((242 + 1043)>(9106 -5612))) then do return v89[v91[6 -4]];end elseif ((625>(707 -(402 + 100))) and (v92>21)) then local v190=0 -0;local v191;local v192;local v193;local v194;local v195;local v196;while true do if ((115<(2509 -(803 + 376))) and (v190==(2 + 0))) then v195=nil;v196=nil;v190=9 -6;end if (((3723 -(403 + 1396))<(2330 + 2436)) and (v190==(0 -0))) then v191=0;v192=nil;v190=1578 -(672 + 905);end if ((v190==(3 -2)) or ((6197 -3609)<1689)) then v193=nil;v194=nil;v190=4 -2;end if ((2396>1579) and (v190==(5 -2))) then while true do if (((2664 + 2088)>(3091 -(71 + 223))) and (2==v191)) then v196=nil;while true do if ((v192==(466 -(80 + 168 + 216))) or ((521 + 921)>(918 + 2293))) then for v305=v193,v76 do local v306=0 -0;local v307;while true do if (((936 -(168 + 768))==v306) or ((1204 -(69 + 253 + 156))>((4262 -2249) -(483 + 450)))) then v307=(0 -0) -0;while true do if (((6216 -(1188 + 168))>=(5328 -(599 + 1381))) and (0==v307)) then v196=v196 + 1;v89[v305]=v194[v196];break;end end break;end end end break;end if ((v192==(0 -0)) or ((5359 -(242 + 686))<(1262 + 692 + 797))) then local v291=0;local v292;while true do if ((3996==3996) and (v291==(0 + 0))) then v292=0 -0;while true do if ((v292==0) or (((5717 -1467) -(899 + 762))<=(1835 -(454 + 604)))) then local v330=0 -0;while true do if (((3482 -((1028 -(135 + 844)) + 167))>=(176 + 788)) and (v330==((796 -517) -(197 + (180 -99))))) then v292=1;break;end if (((5824 -(240 + 931))>(6519 -(3634 -(243 + 421)))) and (v330==(0 + 0))) then v193=v91[2 + 0];v194,v195=v86(v89[v193](v89[v193 + (724 -(526 + 197))]));v330=(898 -(892 + 3)) -2;end end end if (((7225 -4418)<3134) and (v292==(1 -0))) then v192=1404 -(609 + 794);break;end end break;end end end if ((v192==(598 -(566 + 31))) or ((64 + 392)>=(4019 -2280))) then local v293=0 -0;while true do if (((355 + 165)<=(983 -(57 + 342))) and (v293==(1 + 0))) then v192=6 -4;break;end if (((0 -0)==v293) or ((255 + 60)>1185)) then v76=(v195 + v193) -(1 + 0);v196=0 -0;v293=1 + 0;end end end end break;end if ((v191==(0 + 0)) or ((5011 -(1301 + 517))<(43 + (2262 -(966 + 852))))) then local v261=0;while true do if ((v261==0) or ((3862 -2728)==(440 -155))) then v192=0;v193=nil;v261=868 -(283 + 584);end if ((v261==(1463 -(567 + 895))) or (3930==((56431 -43029) -9419))) then v191=1 -0;break;end end end if ((v191==(450 -(152 + 297))) or (1441>(5947 -3138))) then local v262=(2871 -1124) -(1486 + (1092 -(51 + 780)));while true do if (((2687 -(745 + 52))<(3544 -(924 + 688))) and ((462 -(21 + 441))==v262)) then v194=nil;v195=nil;v262=2 -1;end if ((v262==(624 -(214 + 409))) or ((1259 + 940)==4088)) then v191=1 + 1;break;end end end end break;end end else v89[v91[7 -5]]=v37[v91[(1716 -(49 + 1197)) -(38 + 429)]];end elseif ((3005<=(1007 + 2396)) and (v92<=(1673 -(807 + 832)))) then if ((v92<=(27 + 1 + 0)) or (((9249 -(58 + 161)) -6498)>(4369 -(159 + 7)))) then if (((4071 -2137)<=(3519 -(25 + 97))) and (v92<=(14 + 11))) then if ((v92<=(1942 -(1604 + 315))) or ((905 -(11 + 210))>(1930 -(333 + 168)))) then if (((2295 -(290 + 1239))<(4394 -918)) and (v89[v91[1251 -(870 + 379)]]~=v91[4])) then v75=v75 + (1 -0);else v75=v91[5 -2];end elseif ((2454==(1050 + 1404)) and (v92==(113 -(139 -50)))) then v38[v91[7 -4]]=v89[v91[1 + 1]];else local v199=0;local v200;local v201;while true do if (((3851 -947)<=(8118 -4696)) and (v199==(0 -0))) then v200=1483 -(998 + 485);v201=nil;v199=(1665 -(711 + 951)) -2;end if ((v199==(1214 -(458 + 755))) or ((3031 -(678 + 108))<(162 + 76))) then while true do if ((v200==(0 -0)) or ((300 + 352)>2288)) then v201=v91[467 -(349 + 116)];v89[v201](v13(v89,v201 + (1007 -(42 + 964)),v76));break;end end break;end end end elseif ((4187>(4879 -2256)) and (v92<=(566 -(42 + 71 + 427)))) then v89[v91[2]]=v89[v91[736 -(524 + 209)]];elseif (((5541 -(1468 + 127))>3235) and (v92==(9 + 6 + 12))) then if (((1454 -517)==(302 + 635)) and (v89[v91[2]]<v89[v91[1196 -(484 + 708)]])) then v75=v75 + (1540 -(809 + 730));else v75=v91[3];end else v89[v91[5 -(7 -4)]]={};end elseif ((v92<=(44 -13)) or ((10723 -6579)>=4360)) then if ((v92<=(108 -79)) or ((506 -(88 + 92))==(1274 -908))) then local v145=0 -0;local v146;local v147;local v148;local v149;while true do if (((2949 -((2057 -(1689 + 302)) + 1077))<(5538 -3190)) and (v145==(1 + 1))) then while true do if (((5397 -(602 + 80))==(5825 -(1081 + 29))) and (v146==((1411 -869) -(126 + (1984 -1568))))) then v147=0 + 0 + 0;v148=nil;v146=253 -(226 + 26);end if ((v146==(2 -1)) or ((4805 -(70 + (872 -(537 + 315))))<=4027)) then v149=nil;while true do if (((18990 -14983)==4007) and (v147==1)) then for v282=v148 + 1,v91[4 -1] do v8(v149,v89[v282]);end break;end if ((v147==((0 + 0) -0)) or ((1719 + 1892)>(2756 + 1497))) then local v270=558 -(36 + 522);while true do if ((v270==0) or (((4057 -(797 + 1155)) -(184 + 4))>=(880 + 2829))) then local v308=(3508 -2319) -(709 + 480);while true do if ((2794==2794) and (v308==(3 -2))) then v270=4 -(979 -(180 + 796));break;end if (((4282 -(14 + (1479 -(1449 + 29))))==(4410 -(141 + 2))) and (v308==0)) then v148=v91[1 + 1 + 0];v149=v89[v148];v308=3 -2;end end end if ((((1 + 0) -0)==v270) or ((133 + 188)>=(16040 -11639))) then v147=1 -0;break;end end end end break;end end break;end if (((274 + 4329)>((1848 -(1125 + 606)) + 381)) and (v145==(97 -(34 + 63)))) then v146=49 -(34 + 15);v147=nil;v145=2 -1;end if (((6433 -(1064 + 896))>(3284 + 617)) and ((1 + 0)==v145)) then v148=nil;v149=nil;v145=500 -(98 + (803 -(207 + 196)));end end elseif (((6020 -(789 + (1128 -(48 + 311))))>(216 + 2)) and (v92==(976 -((2245 -1384) + (239 -154))))) then local v203=628 -(476 + 152);local v204;local v205;while true do if (((2645 -(98 + 427))>(1588 -817)) and (v203==(0 -0))) then v204=0;v205=nil;v203=1 + 0;end if (((2328 -(122 + (1437 -(741 + 308))))<=(5949 -(831 + 726))) and ((287 -(264 + 22))==v203)) then while true do if (((5652 -(670 + 273))>=(3126 -1482)) and (v204==(0 -(0 + 0)))) then v205=v91[1 + (2 -1)];v89[v205]=v89[v205](v13(v89,v205 + 1,v76));break;end end break;end end else for v228=v91[702 -(189 + 511)],v91[1 + 2] do v89[v228]=nil;end end elseif ((v92<=32) or ((2211 -(147 + 147))<=(9 + 484 + 966))) then if (((3439 + 301)==(16930 -(21793 -8603))) and (v91[661 -(546 + 113)]<v89[v91[4 + 0]])) then v75=v75 + (1 -0);else v75=v91[1 + 2];end elseif ((v92>(127 -(26 + (1072 -(333 + 671))))) or (2415>4588)) then local v206=0 -0;local v207;local v208;local v209;while true do if ((v206==(0 -0)) or ((9936 -5891)==(949 -279))) then v207=0;v208=nil;v206=1 -0;end if (((16107 -11483)>(7424 -(237 + 3866))) and (v206==1)) then v209=nil;while true do if ((v207==0) or (4706==(191 + 368))) then local v264=0 + (0 -0);local v265;while true do if ((v264==(324 -(165 + 159))) or ((2554 -(26 + 991))==(2921 -(1148 + (1514 -(351 + 698)))))) then v265=0;while true do if ((v265==(0 + 0)) or ((725 + 3839)<(938 -398))) then local v312=0 -0;while true do if (((5014 -(94 + 968))==3952) and (v312==(0 -0))) then v208=v91[1325 -((1800 -(558 + 687)) + 452 + 315)];v209=v89[v208];v312=1587 -(1072 + (1678 -(355 + 809)));end if ((((54865 -43263) -7641)>=(8578 -5701)) and (v312==(946 -((1323 -(1177 + 16)) + 815)))) then v265=2 -1;break;end end end if (((5681 -(560 + 1371))==((19186 -(622 + 1262)) -13552)) and (v265==(936 -(50 + 885)))) then v207=810 -(574 + 235);break;end end break;end end end if ((2100<=(2825 -(152 + 130))) and (v207==((733 -(530 + 201)) -1))) then for v271=v208 + (1100 -(879 + (466 -246))),v91[1483 -((640 -(410 + 202)) + 1451)] do v209=v209   .. v89[v271];end v89[v91[2]]=v209;break;end end break;end end else local v210=504 -(367 + 137);local v211;local v212;local v213;while true do if (((9507 -6090)<((9211 -(78 + 922)) -3602)) and (v210==1)) then v213=nil;while true do if (((10598 -6885)>(2591 -((16 -11) + 33))) and (v211==(1 -0))) then while true do if ((v212==(0 + 0)) or ((4365 -((1508 -(941 + 212)) + 295))<(1003 -(79 + (806 -620))))) then v213=v91[(4 -2) -0];v89[v213]=v89[v213](v13(v89,v213 + 1 + 0,v91[1996 -(1521 + 472)]));break;end end break;end if ((v211==(0 -0)) or ((3823 -(108 + 49))>=3813)) then v212=(419 -(185 + 234)) -0;v213=nil;v211=1;end end break;end if ((v210==(0 + 0)) or (4569<3785)) then v211=1621 -(1433 + 188);v212=nil;v210=1;end end end elseif ((4468>3552) and (v92<=((1770 -(1369 + 324)) -(24 + 13)))) then if ((v92<=(1505 -(89 + 1379))) or (((1518 + 1149) -(278 + 1450))==2305)) then if ((1560<=(14854 -10106)) and (v92<=((3362 -(1703 + 229)) -(657 + 390 + 348)))) then v89[v91[2]]=v30(v84[v91[8 -5]],nil,v38);elseif (((1266 + 342)==1608) and (v92>36)) then local v214=33 -(24 + 9);local v215;local v216;local v217;local v218;while true do if ((v214==((276 -(39 + 235)) -1)) or ((6538 -2807)<(7495 -3793))) then local v238=0 -(0 + 0);while true do if ((v238==(0 + 0)) or ((3393 -((190 -66) + (71 -30)))==(9269 -5046))) then v217=nil;v218=nil;v238=(1 + 1) -1;end if ((v238==(1220 -(1207 + 12))) or ((714 -((2018 -(913 + 968)) + 466))>(14655 -(9631 + 1895)))) then v214=1 + 1;break;end end end if (((1972 + 373)<(11586 -7050)) and (v214==(1355 -(445 + 908)))) then while true do if (((2889 -1729)<=(3180 + 540)) and (v215==(149 -(25 + 123)))) then v218=0;for v272=v216,v91[1594 -(914 + 676)] do local v273=0 + 0;while true do if (((561 + 662)<(4351 -2680)) and (v273==(1936 -(1846 + (1579 -(739 + 750)))))) then v218=v218 + (1 -0);v89[v272]=v217[v218];break;end end end break;end if ((0==v215) or (3489<=(2876 -(335 + 1010)))) then local v267=0 + (604 -(551 + 53));local v268;while true do if ((v267==(0 + 0 + 0)) or (1588==(4737 -(333 + 681 + 339)))) then v268=0 + 0;while true do if (((66 -41)<=3402) and (v268==(347 -(26 + 321)))) then v216=v91[2 + 0 + 0];v217={v89[v216](v13(v89,v216 + (1740 -(691 + 1048)),v76))};v268=790 -(488 + 301);end if ((v268==1) or ((176 + 906)==(8871 -(11179 -6410)))) then v215=1;break;end end break;end end end end break;end if (((809 + 240)<=(4355 -(505 + 91))) and (v214==(0 -0))) then local v239=0 -0;while true do if (((2753 -(325 + 703))<1977) and ((1 + 0)==v239)) then v214=1;break;end if (((4613 -2201)==(980 + 1432)) and (v239==0)) then v215=0 + 0;v216=nil;v239=1731 -(1503 + 227);end end end end else v89[v91[1 + 1]]();end elseif ((v92<=(14 + (1932 -(97 + 1811)))) or (2703==4636)) then do return;end elseif (((143 -(10 + 76))<=(998 -(29 + 298))) and (v92>(139 -100))) then if ((4934==4934) and  not v89[v91[1593 -(1510 + 81)]]) then v75=v75 + ((3261 -(323 + 1227)) -(565 + 1145));else v75=v91[(374 + 35) -(273 + 133)];end elseif (((1609 -1028)<=(12798 -8073)) and (v89[v91[5 -3]]==v89[v91[(13 + 1) -10]])) then v75=v75 + (368 -(328 + 39));else v75=v91[588 -((801 -323) + 107)];end elseif ((v92<=((2398 -456) -(1386 + 513))) or ((6065 -(510 + 1106))<(1036 -382))) then if ((v92<=(6 + 35)) or ((390 + 666)>=(4192 -(652 + 399)))) then if (((4706 + 279)>(4028 -2668)) and (v89[v91[2 -0]]<=v89[v91[3 + 1]])) then v75=v75 + (166 -(101 + 64));else v75=v91[1 + 2 + 0];end elseif ((1858==(190 + 1668)) and (v92>(153 -111))) then local v219=699 -((758 -308) + 249);local v220;local v221;local v222;while true do if (((1571 + 1113)==2684) and (v219==(1 + 0 + 0))) then v222=nil;while true do if ((v220==((0 -0) -0)) or ((2625 -(1772 + 6))==(7425 -4427))) then v221=0;v222=nil;v220=4 -3;end if (((1859 -(1634 + 224))==v220) or ((5521 -(691 + (2553 -(440 + 1449))))<((1943 -633) -891))) then while true do if ((v221==(0 -0)) or ((4214 -2730)==(6983 -4382))) then v222=v91[1275 -(553 + 720)];do return v13(v89,v222,v222 + v91[8 -5]);end break;end end break;end end break;end if (((2737 -1748)<(479 + 3859)) and (v219==((0 + 0) -0))) then v220=0 + 0;v221=nil;v219=2 -1;end end else v89[v91[2]]=v89[v91[3 -0]][v91[1503 -((2103 -(814 + 1014)) + 1224)]];end elseif ((((126 -65) + 1453)>=(1808 -(431 + 474 + 214))) and (v92<=(1279 -(696 + 539)))) then local v151=0 -0;local v152;local v153;local v154;local v155;local v156;while true do if (((1 + 0)==v151) or (((4168 -(57 + 1679)) -(571 + 1112))==(323 -183))) then v154=nil;v155=nil;v151=1 + 1;end if ((v151==(729 -(458 + 269))) or (326>(2017 -(860 + 389)))) then v156=nil;while true do if ((v152==1) or ((2540 -1646)==(11833 -8099))) then v155=nil;v156=nil;v152=1 + 1;end if (((4978 -(142 + 1856))>=(1961 -(158 + 744))) and (v152==0)) then v153=0;v154=nil;v152=1044 -(87 + 956);end if (((13379 -9957)<=4639) and ((3 -1)==v152)) then while true do if ((1502==(4374 -2872)) and (v153==(1 + 1 + 0))) then for v283=1 + 0,v91[4] do local v284=0 -0;local v285;local v286;local v287;while true do if (((194 + 702)==(2073 -(98 + 1079))) and ((0 + 0)==v284)) then v285=0 + 0;v286=nil;v284=311 -(261 + 49);end if ((v284==(1 -(0 -0))) or (15>(436 -(73 + 187)))) then v287=nil;while true do if ((v285==(935 -((1298 -(661 + 507)) + (1809 -1005)))) or ((4883 -(2364 -(15 + 25)))<=(1376 + 990))) then while true do if ((v286==1) or ((14679 -10995)<(123 + 1660))) then if ((v287[1 -0]==(813 -(101 + 686))) or ((3306 -(275 + 40))>=(13193 -(1574 + 7254)))) then v156[v283-(1 + 0 + 0)]={v89,v287[1 + 1 + 1]};else v156[v283-(1 + 0)]={v37,v287[3]};end v88[ #v88 + 1 + 0]=v156;break;end if (((3204 -(264 + 182))==(1734 + 1024)) and (v286==(0 -(1435 -(1045 + 390))))) then local v335=(0 -0) -0;local v336;while true do if ((v335==(0 -0)) or ((2273 + 1073)<(1460 + 570))) then v336=0 + 0;while true do if ((v336==(1 + 0)) or ((7713 -3647)>=4197)) then v286=(366 -130) -(173 + 62);break;end if (((0 + 0)==v336) or (2483<213)) then v75=v75 + (1145 -((1965 -(269 + 1127)) + 575));v287=v82[v75];v336=1 + 0;end end break;end end end end break;end if ((v285==(1881 -(878 + 1003))) or ((10675 -6807)<715)) then local v327=0;while true do if (((825 + 559)<(7181 -4234)) and (v327==(0 + (0 -0)))) then v286=0 -0;v287=nil;v327=677 -(503 + 173);end if ((v327==(988 -(475 + 512))) or (473>=(204 + 2107))) then v285=1 + 0;break;end end end end break;end end end v89[v91[4 -2]]=v30(v154,v155,v38);break;end if (((4783 -(6947 -4116))<(1362 + 2496)) and ((99 -(10 + 88))==v153)) then local v275=1145 -(753 + (1816 -(997 + 427)));local v276;while true do if ((v275==(0 -0)) or ((3420 -(586 + 1211))>=(4746 -(364 + 364 + 701)))) then v276=(522 -(10 + 512)) + 0;while true do if (((1424 -(362 + 1061))==v276) or (((2988 -(16 + 629)) + 192)==(4616 -(1451 + 515)))) then v153=1 + 1;break;end if ((v276==(1052 -(84 + 968))) or ((3777 -(852 + 604))<=1659)) then local v322=0 -0;while true do if ((v322==0) or ((8399 -4692)>=(8946 -4716))) then v156={};v155=v10({},{__index=function(v337,v338)local v342=0 -0;local v343;local v344;while true do if ((v342==(1 + 0)) or ((3742 -(5171 -2991))>2927)) then while true do if ((v343==(0 + 0 + 0)) or ((156 + 838 + 3644)<1517)) then v344=v156[v338];return v344[1][v344[1 + 1]];end end break;end if ((v342==(0 + 0)) or (544>=(1999 + 1381))) then v343=0 + 0;v344=nil;v342=1 + 0;end end end,__newindex=function(v339,v340,v341)local v345=497 -(152 + 345);local v346;local v347;while true do if (((1997 -(148 + 1849))==v345) or ((320 + 63)==3036)) then local v354=923 -(263 + 660);while true do if (((3 -2)==v354) or ((3741 + 125)==(2616 -(286 + 55)))) then v345=1 + 0 + 0;break;end if (((896 -(122 + 289))<=(5925 -2213)) and (v354==(1042 -(214 + (1733 -(547 + 358)))))) then v346=0;v347=nil;v354=1 -0;end end end if ((v345==(1 + 0)) or ((4110 -(991 + 447))==((505 -258) + 1709 + 630))) then while true do if ((v346==((2980 -1322) -(242 + 1416))) or ((1919 -(8 + (1538 -(1355 + 172))))>=(1769 + (9787 -6718)))) then v347=v156[v340];v347[2 -1][v347[595 -(524 + 69)]]=v341;break;end end break;end end end});v322=2 -1;end if ((v322==1) or ((2240 -(94 + 1417))>=2772)) then v276=1 + 0;break;end end end end break;end end end if ((((922 -445) + 347)==(519 + 305)) and (v153==(0 -0))) then local v277=(0 -0) + 0;local v278;while true do if ((4091>=(1252 + 173)) and (v277==(0 -0))) then v278=1934 -(1127 + 807);while true do if ((v278==(0 + 0)) or ((3700 + 402)<2846)) then local v323=0;while true do if (((4343 -(6 + 388))==(2598 + 1351)) and (v323==(764 -(443 + 320)))) then v278=1 + 0;break;end if (((2128 -(404 + 502 + 37))<=(1752 + 1166)) and (v323==0)) then v154=v84[v91[6 -3]];v155=nil;v323=(2560 -1437) -(281 + 841);end end end if (((534 + 2469)>=(2259 -(152 + 515))) and (v278==(965 -(947 + 17)))) then v153=1 -0;break;end end break;end end end end break;end end break;end if (((640 + 1365)<(2757 + 360)) and ((0 + 0 + 0)==v151)) then v152=1021 -(950 + 71);v153=nil;v151=872 -(542 + 329);end end elseif (((3467 + 318)<4934) and (v92==(1227 -(506 + 676)))) then v89[v91[801 -(112 + (971 -(36 + 248)))]][v91[4 -1]]=v91[648 -(497 + 147)];elseif ((v89[v91[2]]==v91[4]) or ((9181 -6032)==(4821 -(178 + 1053)))) then v75=v75 + ((1846 -1381) -(225 + 239));else v75=v91[117 -(60 + 54)];end v75=v75 + 1 + 0;break;end if ((1268>=(818 -(1006 -537))) and (v96==(0 -0))) then v91=v82[v75];v92=v91[1 + 0];v96=1;end end end end A,B=v28(v11(v79));if  not A[1] then local v93=0;local v94;while true do if (v93==0) then v94=v36[4][v75] or "?";error("Script error at ["   .. v94   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end end end return v30(v29(),{},v17)();end end end vv9());break;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end
